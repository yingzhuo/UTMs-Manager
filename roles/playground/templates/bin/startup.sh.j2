#!/bin/sh

# ----------------------------------------------------------------------------------------------
# VM参数
# ----------------------------------------------------------------------------------------------
{% for item in java_opts %}
JAVA_OPT="${JAVA_OPT} {{ item }}"
{% else %}
JAVA_OPT=""
{% endfor %}
{% if app_heapdump_dir != '' %}
# HeapDump
JAVA_OPT="${JAVA_OPT} -XX:+HeapDumpOnOutOfMemoryError -XX:+HeapDumpBeforeFullGC -XX:HeapDumpPath={{ app_heapdump_dir }}/{{ app_name }}_heapdump.hprof"
{% endif %}
{% if app_gclog_dir != '' %}
# GC-LOG
JAVA_OPT="${JAVA_OPT} -verbose:gc -Xlog:gc*:file={{ app_gclog_dir }}/{{ app_name }}_gc_%p_%t.log:time,tags:filecount=5,filesize=32M"
{% endif %}

# ----------------------------------------------------------------------------------------------
# System Properties
# ----------------------------------------------------------------------------------------------
JAVA_OPT_EXT="${JAVA_OPT_EXT} -Djava.security.egd=file:/dev/./urandom"
JAVA_OPT_EXT="${JAVA_OPT_EXT} -Dloader.system=false"
JAVA_OPT_EXT="${JAVA_OPT_EXT} -Dloader.path={{ app_lib_dir }},{{ app_config_dir }}"

if [ -e "{{ app_home }}/config/logback.xml" ]; then
  JAVA_OPT_EXT="${JAVA_OPT_EXT} -Dlogging.config={{ app_home }}/config/logback.xml"
fi

if [ -e "{{ app_home }}/config/logback-spring.xml" ]; then
  JAVA_OPT_EXT="${JAVA_OPT_EXT} -Dlogging.config={{ app_home }}/config/logback-spring.xml"
fi

# ----------------------------------------------------------------------------------------------
# 初始化有可执行权限时 执行之
# ----------------------------------------------------------------------------------------------
if [ -x "{{ app_home }}/bin/init.sh" ]; then
    {{ app_home }}/bin/init.sh
fi

# ----------------------------------------------------------------------------------------------
# 启动程序
# ----------------------------------------------------------------------------------------------
{{ java_home }}/bin/java \
  ${JAVA_OPT} \
  ${JAVA_OPT_EXT} \
  -cp "$CLASSPATH:{{ app_home }}/{{ app_name }}.jar" \
  org.springframework.boot.loader.launch.PropertiesLauncher \
  --spring.pid.file={{ app_pid_dir }}/{{ app_name}}.pid \
  {% for item in spring_args %}{{ item }} \{% endfor %} 
  "$@"
