- name: "调整内核参数"
  ansible.posix.sysctl:
    name: "vm.overcommit_memory"
    value: "1"
    sysctl_file: /etc/sysctl.conf
    reload: true
  notify:
    - "重启Instance1服务"
    - "重启Instance2服务"
  tags: setup

- name: "确保安装目录和数据目录"
  ansible.builtin.file:
    name: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: "u=rwx,g=rx,o=rx"
  loop:
    - /opt/redis/bin/
    - /opt/redis/etc/
    - /opt-data/redis-6379/
    - /opt-data/redis-6380/
    - /opt-data/redis-redlock/
  tags: setup

- name: "拷贝公共配置文件"
  ansible.builtin.template:
    src: redis-included.conf
    dest: /opt/redis/etc/redis-included.conf
    owner: root
    group: root
    mode: "u=rw,g=r,o=r"
  notify:
    - "重启Instance1服务"
    - "重启Instance2服务"
  tags: setup

- name: "拷贝Instance1配置文件"
  ansible.builtin.template:
    src: redis-instance1.conf
    dest: /opt/redis/etc/redis-{{ instance1.port }}.conf
    owner: root
    group: root
    mode: "u=rw,g=r,o=r"
  notify:
    - "重启Instance1服务"
  tags: setup

- name: "拷贝Instance1服务定义文件"
  ansible.builtin.template:
    src: redis-instance1.service
    dest: /etc/systemd/system/{{ instance1.service }}.service
    owner: root
    group: root
    mode: "u=rw,g=r,o=r"
  notify:
    - "重加载所有服务"
    - "重启Instance1服务"
  tags: setup

- name: "拷贝Instance2配置文件"
  ansible.builtin.template:
    src: redis-instance2.conf
    dest: /opt/redis/etc/redis-{{ instance2.port }}.conf
    owner: root
    group: root
    mode: "u=rw,g=r,o=r"
  notify:
    - "重启Instance2服务"
  tags: setup

- name: "拷贝Instance2服务定义文件"
  ansible.builtin.template:
    src: redis-instance2.service
    dest: /etc/systemd/system/{{ instance2.service }}.service
    owner: root
    group: root
    mode: "u=rw,g=r,o=r"
  notify:
    - "重加载所有服务"
    - "重启Instance2服务"
  tags: setup

- name: "拷贝红锁服务配置文件"
  ansible.builtin.template:
    src: redis-redlock.conf
    dest: /opt/redis/etc/redis-redlock.conf
    owner: root
    group: root
    mode: "u=rw,g=r,o=r"
  notify:
    - "重启红锁服务"
  tags: setup

- name: "拷贝红锁服务定义文件"
  ansible.builtin.template:
    src: redis-redlock.service
    dest: /etc/systemd/system/{{ redlock.service }}.service
    owner: root
    group: root
    mode: "u=rw,g=r,o=r"
  notify:
    - "重加载所有服务"
    - "重启红锁服务"
  tags: setup

- name: "配置环境变量"
  ansible.builtin.blockinfile:
    path: /etc/zsh/zprofile
    block: |
      # Redis
      export REDIS_HOME=/opt/redis
      export PATH=$PATH:$REDIS_HOME/bin
      export REDISCLI_AUTH="redis"
      alias redis-cli="redis-cli --raw --no-auth-warning"
    marker: "## {mark} add redis block by ansible"
    state: present
  tags: setup

###############################################################################

- name: "停止Redis所有节点"
  ansible.builtin.service:
    name: "{{ item }}"
    state: stopped
    enabled: false
  loop:
    - "{{ instance1.service }}"
    - "{{ instance2.service }}"
    - "{{ redlock.service }}"
  tags: stop

###############################################################################

- name: "开启Redis所有节点"
  ansible.builtin.service:
    name: "{{ item }}"
    state: started
    enabled: true
  loop:
    - "{{ instance1.service }}"
    - "{{ instance2.service }}"
    - "{{ redlock.service }}"
  tags: startup

###############################################################################

- name: "重启Redis所有节点"
  ansible.builtin.service:
    name: "{{ item }}"
    state: restarted
    enabled: true
  loop:
    - "{{ instance1.service }}"
    - "{{ instance2.service }}"
    - "{{ redlock.service }}"
  tags: restart
